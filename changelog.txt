Changelog of GPU-Voxels:

V 0.1 (2014-09-29):
===================
- Initial Version of GPU Voxels 
  (Please find a list of features on the Website or the according scientific papers or have a look at the example programs)
- Open Issue: Compiled only in Debug Mode

V 0.2 (2014-09-12):
===================
- Fixed compilation issued in Release Mode

V 0.3 (2015-02-26):
===================
- Made changes in the include structure to allow compilation with CUDA 6.5 (no longer trying to compile Boost-SharedMem-Headers with NVCC)
- Added datatype "PrimitiveArray" to quickly visualize helpers like thousands of spheres or cubes.
- Added InsertMetaPointCloud option to give each sub-cloud an own voxel type
- Function to sync a MetaPointCloud back to Host Memory
- Speed up in clearing VoxelMaps
- Added an optional offset when intersecting maps. So you can move one map relative to another before intersecting them.
- Added parameter to Kinect Interface to support the new PCL interface where a Cam ID has to be specified.
- More documentation in Octree kernels
- Added more operators for primitive data types
- Added Binvox as file format to generate Pointclouds
- Added Example program to demonstrate the insertion of IBEO Sensor Pointclouds
- Added missing config file for example program that intersects live Kinect data with a robot model (RobotVsEnvironment)
- Open Issues: Flickering colors in Visualization

V 0.4 (2015-03-09):
===================
- Fixed coordinate system in the Viewer
- Improved Viewer XML Config parser
- Added possibility to control visibility of SweptVolume subvolumes from a provider program
- Improved pointcloud file loader (new datatype, scaling)
- Improved example programs, added viwer configfile for them
- Added missing pointcloud filess for the examples
- Moved performance monitor to icl_core
- Some smaller fixes regarding RAD / DEG
- Removed compiler warnings

V 0.5 (2015-04-13):
===================
- Release 0.5: Critical bugfixes and reduction of warnings.
- Fixed loadbalancer bug that occurred when inserting only very little data into an octree.
- Fixed bug in extraction of Octree data.
- Fixed color gradient along Z-Axis in viewer.
- Fixed overwrite of Swept-Volume subvolumes via provider in the Viewer.
- Fixed heaps of compiler warnings (Thanks to Felix Mauch).
- Renamed MapTypes to more understandable names.
- Implemented disk-reader and writer for generic Voxelmaps.
- Simplified file loading of pointclouds.
- Moved some math functions to more general file.
- Moved some DH computation code in preparation for URDF support.
- Reimplemented function to move focus point in Viewer.
- Removed dead code and dead files.

V 0.51 (2015-04-24):
====================
- Synced readme files.

V 0.6 (2015-04-24):
===================
- Fixed crahses of octree_provider command line interface resulting from race-conditions.
- Fixed flickering in Visualizer when drawing more then one Octree. Resulted from same race-conditions as above.
- Corrected axis order in visualizer console output.
- Fixed model loading path when not using GPU_VOXELS_MODEL_PATH
- Changed argument handling in command line interface for loading models from PCD only to more general pointcloud files.

V 0.7 (2015-06-10):
===================
- Added URDF parser and interfaces to load ROS robots.
- Added URDF example program with HoLLiE robot model and URDF file.
- Unified API for DH-Parameter and URDF robots.
- Added name lookup to MetaPointClouds.
- Restructured CMake files to generate more descriptive report about missing libs.
- Fixed missing thrust include.
- Fixed color gradient in visualizer.
- Fixed DH transformations for prismatic links.

V 0.71 (2015-06-10):
====================
- Updated this changelog.

V 0.8 (2015-11-09):
===================
- Compiles with CUDA 7.5
- Added Voxellists as new Datatype
    - Huge speedup compared to Voxelmaps with sparse data.
    - Added Bit-Shifting-Collisionchecks (Thanks to Felix Mauch)
    - Added Bit-Margin for Bitvoxel Collisionchecks (Thanks to Felix Mauch)
- General:
    - Removed superficial memory allocation from Voxelmap.
    - Added script to automatize binvox mesh voxelization
    - Improved PrimitiveArrays update speed when number of primitives stays constant.
    - Removed heaps of compiler warnings (Thanks to Christian Juelg)
    - Various Bugfixes, mainly in collision Kernels
- Renamings / moved code:
    - HighLevel-API: Added "merge" function.
    - CudaMath now longer requires an instance. Now it is a namespace.
    - VoxelType ==> BitVoxelMeaning
    - Fixed standard CTORs of basic datatypes for CUDA shared memory allocation.
    - Moved voxels to gpu_voxels namespace
    - Removed seom missleading typedefs
    - Moved Voxel definitions to own subfolder.
    - Removed dead code fragments.
- Octree:
    - Adapted to new API.
    - Removed its own voxellist. Now uses more general Voxellist.
    - Removed VoxelTypeFlags and replaced them by more general bitvectors.
    - Simplified Octree selftests and triggered them by Boost-Test.
    - Dropped CUB lib. Now using CUDAs version from Thrust.
- Robot representation:
    - Enhanced robot interface (jointnames and min max angles).
    - Restructured inheritance of robot implementations.
    - Fixed install of robot headers.
- Visualizer:
    - Updated Visualizer to new API.
    - Added new function to move cam in plane.
    - Switched from Octree to more general Cubelist interface,
      as this can also be used to visualize Voxellists.
    - Visualizer now cleans Shared-Mem files.
    - Added Script to generate color gradient config files for visualizer.
    - Fixed a bug in drawing the grid
- Example programs and Testcases:
    - Updated examples to new API.
    - Added more Boost-Tests.
    - Reordered model files.
- icl_core and basic libs:
    - Added performance monitor docu
    - Some new cmake magic
    - Improved ringbuffer
    - New Doxygen version.
    - Tinyxml cmake updated.
    - Added missing Findscripts for OpenNi.

V 0.81 (2015-12-14):
====================
- Fixed severe Bug in MetaPointCloud::updatePointCloud() that lead to Segfaults.
- Implemented new functions for VoxelLists:
    - Equality check (Mainly for Boost-Tests)
    - Subtraction (Bool operation)
    - Collisioncheck that counts the collisions per Voxel-meaning.
    - ShrinkToFit: Frees preallocated Thrust memory
- Fixed error handling when reading and writing all data structures.
- Added more Boost testcases.
- Fixed URDF robot rendering when for collision meshes.
- Made some const functions const.
- Visualizer:
    - Improved python script to generate color gradients for Visualizer configfiles.
    - Made Voxellist Voxels clickable
    - Enhanced reliability of Visualizer (Thanks to Christian Juelg)
    - Added slicing functionality to Visualizer (Thanks to Christian Juelg)
- Improved voxelize.sh script to delete intermediate files.

V 0.82 (2016-02-12):
====================
- Fixed severe Bug in the locking of Voxellists. Warning: This only concerns VoxelLists.
- Added collision check between ProbabilisticVoxelMaps and VoxelLists.
- Added transform functionality to MetaPointClouds and removed it from Robot classes.
- Fixed Vec3ToMat4() function.
- Implemented Deep-Copy operator for MetaPointClouds.
- Implemented Pointcloud-Offsets for geometry entities of URDF models.
    - Warning: Only translation, NO rotation available here!
- Added new struct to describe oriented boxes.
- Added new file for helper functions to generate pointclouds from geometric primitives.
- Fixed RPY rotation matrices.
- Added Boost testcase for shifted collision checks.
- Added script to generate Visualizer configuration with random colors for SweptVolume IDs.
- Refined the models of the SVH with 0.4 mm resolution.
